package db

import (
	"expdb/models"
	"fmt"

	_ "github.com/lib/pq"
)

var expDatabaseInfo = PostgresInfo{
	Host:     "localhost",
	Port:     5050,
	Name:     "expdb",
	Username: "postgres",
	Password: "admin",
	Ssl:      "disable",
}

func (p *PostgresStorage) Init() error {
	//if err := create(p, "expdb"); err != nil {
	//	return fmt.Errorf("can't create database: %w", err)
	//}

	if err := createExploitTable(p); err != nil {
		return fmt.Errorf("can't create table: %w", err)
	}

	return nil
}

func (p *PostgresStorage) Insert(e *models.Exploit) error {
	statement := `INSERT INTO exploits (date, title, type, platform) VALUES (?, ?, ?, ?)`

	if _, err := p.db.Exec(statement, e.Date, e.Title, e.Type, e.Platform); err != nil {
		return fmt.Errorf("can't insert exploit to database: %w", err)
	}
	return nil
}

func (p *PostgresStorage) Remove(e *models.Exploit) error {
	statement := `DELETE FROM exploits WHERE date = ? AND title = ? AND type = ? AND platform = ?`

	if _, err := p.db.Exec(statement, e.Date, e.Title, e.Type, e.Platform); err != nil {
		return fmt.Errorf("can't delete exploit: %w", err)
	}

	return nil
}

func (p *PostgresStorage) Print() (string, error) {
	statement := `SELECT * FROM exploits`
	var result string

	rows, err := p.db.Query(statement)
	if err != nil {
		return "", fmt.Errorf("can't query rows: %w", err)
	}

	for rows.Next() {
		var date, title, typeExp, platform string

		if err := rows.Scan(&date, &title, &typeExp, &platform); err != nil {
			return "", fmt.Errorf("can't scan rows: %w", err)
		}
		result += fmt.Sprintln(date, title, typeExp, platform, "\n")
	}

	return result, nil
}

func createExploitTable(db *PostgresStorage) error {
	statement := `
	CREATE TABLE IF NOT EXISTS exploits (
	id SERIAL PRIMARY KEY,
	date VARCHAR(10),
	title TEXT,
	type TEXT,
	platform TEXT)`
	_, err := db.db.Exec(statement)
	return err
}
